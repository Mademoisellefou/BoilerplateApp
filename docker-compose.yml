version: '3.7'

services:
  # nginx:
  #  depends_on:
  #    - api
  #    - frontend
  #  build:
  #    dockerfile: Dockerfile
  #    context: ./nginx
  #  ports:
  #    - "80:80"
  # api:
  #   image: libiamel/dev-back-app:v0
  #   container_name: api
  #   build:
  #     dockerfile: Dockerfile
  #     context: "./server"
  #     args:
  #       PORT: ${PORT}
  #   volumes:
  #     - /app/node_modules
  #     - ./server:/app
  #   ports:
  #     - "4000:4000"

  # frontend:
  #   stdin_open: true
  #   image: libiamel/dev-front-app:v0
  #   container_name: frontend
  #   # build: 
  #   #   dockerfile: Dockerfile
  #   #   context: ./frontend
  #   #   args:
  #   #     REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - /app/node_modules
  #     - ./frontend:/app


  proxy:
    image: jwilder/nginx-proxy:0.9
    container_name: proxy
    ports:
      - "80:80"
    # environment:
    #   DEFAULT_HOST: ${DOMAIN}
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      red:
        ipv4_address: 10.5.0.1

  # frontend:
  #   image: node:16-buster-slim
  #   container_name: frontend
  #   restart: always
  #   command: yarn start
  #   volumes:
  #     - ./frontend/src:/usr/src/app
  #   working_dir: /usr/src/app
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     red:
  #       ipv4_address: 10.5.0.2

  backend:
    image: node:16-buster-slim
    container_name: backend
    restart: always
    command: yarn start
    volumes:
      - ./server:/usr/src/app
    working_dir: /usr/src/app
    environment:
      PORT: ${PORT}
      VIRTUAL_HOST: ${DOMAIN}
      VIRTUAL_PORT: 4000
    ports:
      - "4000:4000"
    networks:
      red:
        ipv4_address: 10.5.0.3

networks:
  red:
    name: red
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/8